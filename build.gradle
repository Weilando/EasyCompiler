plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/sablecc/sablecc
    compile group: 'sablecc', name: 'sablecc', version: '3.2-1'

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.1")

    // https://mvnrepository.com/artifact/com.google.jimfs/jimfs
    testCompile group: 'com.google.jimfs', name: 'jimfs', version: '1.1'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task getSableCC(type: Copy) {
    mkdir 'libs/'
    from configurations.compile
    into 'libs/'
}

task runSableCC(type: Exec) {
    inputs.file('src/main/java/EasyCompiler.scc').withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.dirs(['src/main/java/analysis', 'src/main/java/lexer', 'src/main/java/node', 'src/main/java/parser'])

    workingDir = "src/main/java"
    commandLine 'java'
    args = ['-jar', '../../../libs/sablecc-3.2-1.jar', 'EasyCompiler.scc']
}

task copyLexerDatToOut(type: Copy) {
    inputs.file('src/main/java/lexer/lexer.dat')withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.file('out/production/classes/lexer/lexer.dat')

    from 'src/main/java/lexer/lexer.dat'
    into 'out/production/classes/lexer'
}

task copyParserDatToOut(type: Copy) {
    inputs.file('src/main/java/parser/parser.dat')withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.file('out/production/classes/parser/parser.dat')

    from 'src/main/java/parser/parser.dat'
    into 'out/production/classes/parser'
}

task copyLexerDatToBuild(type: Copy) {
    inputs.file('src/main/java/parser/parser.dat')withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.file('build/classes/java/main/lexer/lexer.dat')

    from 'src/main/java/lexer/lexer.dat'
    into 'build/classes/java/main/lexer'
}

task copyParserDatToBuild(type: Copy) {
    inputs.file('src/main/java/parser/parser.dat')withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.file('build/classes/java/main/parser/parser.dat')

    from 'src/main/java/parser/parser.dat'
    into 'build/classes/java/main/parser'
}

runSableCC.dependsOn(getSableCC)
compileJava.dependsOn(runSableCC)
compileTestJava.dependsOn(runSableCC)
test.dependsOn(copyLexerDatToBuild)
test.dependsOn(copyParserDatToBuild)
copyLexerDatToOut.dependsOn(runSableCC, compileJava, compileTestJava)
copyParserDatToOut.dependsOn(runSableCC, compileJava, compileTestJava)
copyLexerDatToBuild.dependsOn(copyLexerDatToOut)
copyParserDatToBuild.dependsOn(copyParserDatToOut)